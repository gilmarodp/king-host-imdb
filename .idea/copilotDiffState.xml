<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/docker-compose.yml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/docker-compose.yml" />
              <option name="originalContent" value="version: '3.8'&#10;&#10;services:&#10;  # Serviço PHP/Laravel&#10;  app:&#10;    build:&#10;      context: ./backend&#10;      dockerfile: Dockerfile&#10;    container_name: laravel_app&#10;    ports:&#10;      - &quot;9000:9000&quot;&#10;    working_dir: /var/www&#10;    volumes:&#10;      - ./backend:/var/www&#10;    networks:&#10;      - app-network&#10;    depends_on:&#10;      db:&#10;        condition: service_healthy&#10;&#10;  # Serviço Node.js/Vue.js (para desenvolvimento)&#10;  frontend:&#10;    build:&#10;      context: ./frontend&#10;      dockerfile: Dockerfile&#10;    container_name: vue_frontend&#10;    ports:&#10;      - &quot;5173:5173&quot;&#10;    volumes:&#10;      - ./frontend:/app&#10;      - /app/node_modules # Anônimo volume para evitar sobrescrita&#10;    networks:&#10;      - app-network&#10;&#10;  # Servidor Web Nginx&#10;  nginx:&#10;    image: nginx:alpine&#10;    container_name: app_nginx&#10;    restart: unless-stopped&#10;    ports:&#10;      - &quot;8000:80&quot;&#10;    volumes:&#10;      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf&#10;    depends_on:&#10;      - app&#10;      - frontend&#10;    networks:&#10;      - app-network&#10;&#10;  # Banco de Dados (Exemplo com MySQL)&#10;  db:&#10;    image: mysql:8.0&#10;    container_name: app_db&#10;    restart: unless-stopped&#10;    environment:&#10;      MYSQL_DATABASE: ${DB_DATABASE:-laravel}&#10;      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-root}&#10;      MYSQL_PASSWORD: ${DB_PASSWORD:-userpass}&#10;      MYSQL_USER: ${DB_USERNAME:-user}&#10;    volumes:&#10;      - db-data:/var/lib/mysql&#10;    networks:&#10;      - app-network&#10;    healthcheck:&#10;      test: [&quot;CMD&quot;, &quot;mysqladmin&quot; ,&quot;ping&quot;, &quot;-h&quot;, &quot;localhost&quot;]&#10;      timeout: 20s&#10;      retries: 10&#10;&#10;networks:&#10;  app-network:&#10;    driver: bridge&#10;&#10;volumes:&#10;  db-data:&#10;    driver: local&#10;" />
              <option name="updatedContent" value="version: '3.8'&#10;&#10;services:&#10;  # Serviço PHP/Laravel&#10;  app:&#10;    build:&#10;      context: ./backend&#10;      dockerfile: Dockerfile&#10;    container_name: laravel_app&#10;    ports:&#10;      - &quot;9000:9000&quot;&#10;    working_dir: /var/www&#10;    volumes:&#10;      - ./backend:/var/www&#10;    networks:&#10;      - app-network&#10;    depends_on:&#10;      db:&#10;        condition: service_healthy&#10;&#10;  # Serviço Node.js/Vue.js (para desenvolvimento)&#10;  frontend:&#10;    build:&#10;      context: ./frontend&#10;      dockerfile: Dockerfile&#10;    container_name: vue_frontend&#10;    ports:&#10;      - &quot;5173:5173&quot;&#10;    volumes:&#10;      - ./frontend:/app&#10;      - /app/node_modules # Anônimo volume para evitar sobrescrita&#10;    networks:&#10;      - app-network&#10;&#10;  # Servidor Web Nginx&#10;  nginx:&#10;    image: nginx:alpine&#10;    container_name: app_nginx&#10;    restart: unless-stopped&#10;    ports:&#10;      - &quot;8000:80&quot;&#10;    volumes:&#10;      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf&#10;    depends_on:&#10;      - app&#10;      - frontend&#10;    networks:&#10;      - app-network&#10;&#10;  # Banco de Dados (Exemplo com MySQL)&#10;  db:&#10;    image: mysql:8.0&#10;    container_name: app_db&#10;    restart: unless-stopped&#10;    environment:&#10;      MYSQL_DATABASE: ${DB_DATABASE:-laravel}&#10;      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-root}&#10;      MYSQL_PASSWORD: ${DB_PASSWORD:-userpass}&#10;      MYSQL_USER: ${DB_USERNAME:-user}&#10;    volumes:&#10;      - db-data:/var/lib/mysql&#10;    networks:&#10;      - app-network&#10;    healthcheck:&#10;      test: [&quot;CMD&quot;, &quot;mysqladmin&quot; ,&quot;ping&quot;, &quot;-h&quot;, &quot;localhost&quot;]&#10;      timeout: 20s&#10;      retries: 10&#10;&#10;networks:&#10;  app-network:&#10;    driver: bridge&#10;&#10;volumes:&#10;  db-data:&#10;    driver: local" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>